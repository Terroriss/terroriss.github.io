function Karel(e,f,g){var a={isLoaded:!1},b=KarelModel();a.addMoveText=console.log;a.draw=function(c){KarelView.draw(e,b,c)};a.move=function(){b.move();a.addMoveText(b.moveText("moved one step forward"))};a.turnLeft=function(){b.turnLeft();a.addMoveText(b.moveText("turned left"))};a.turnRight=function(){b.turnRight();a.addMoveText(b.moveText("turned right"))};a.turnAround=function(){b.turnAround();a.addMoveText(b.moveText("turned around"))};a.paintCorner=function(c){b.paintCorner(c);a.addMoveText(b.moveText(`painted the corner ${c}`))};
a.putBeeper=function(){b.putBeeper();a.addMoveText(b.moveText("put a beeper down"))};a.pickBeeper=function(){b.pickBeeper();a.addMoveText(b.moveText("picked a beeper up"))};a.beepersInBag=function(){return 0<b.getNBeepersInBag()};a.noBeepersInBag=function(){return 0>=b.getNBeepersInBag()};a.beepersPresent=function(){return b.beeperPresent()};a.noBeepersPresent=function(){return!b.beeperPresent()};a.frontIsClear=function(){return b.frontIsClear()};a.frontIsBlocked=function(){return!b.frontIsClear()};
a.random=function(c){var d=.5;void 0!=c&&(d=c);return Math.random()>d};a.rightIsClear=function(){return b.rightIsClear()};a.rightIsBlocked=function(){return!b.rightIsClear()};a.leftIsClear=function(){return b.leftIsClear()};a.leftIsBlocked=function(){return!b.leftIsClear()};a.facingNorth=function(){return b.facingNorth()};a.notFacingNorth=function(){return!b.facingNorth()};a.facingSouth=function(){return b.facingSouth()};a.notFacingSouth=function(){return!b.facingSouth()};a.facingEast=function(){return b.facingEast()};
a.notFacingEast=function(){return!b.facingEast()};a.facingWest=function(){return b.facingWest()};a.notFacingWest=function(){return!b.facingWest()};a.loadWorld=function(c,d){b.loadWorld(c,d)};a.getModel=function(){return b};a.getInitialWorldText=function(c){return b.initialWorldText(c)};a.getMoveText=function(c){return b.moveText(c)};loadDoc("/karel/karel/js/api/"+f+"/"+g+".json",function(c){c=JSON.parse(c);console.log(c);for(original in c)translation=c[original],original in Karel.instructions&&(v=
Karel.instructions[original],Karel.instructions[translation]=v),original in Karel.predicates&&(v=Karel.predicates[original],Karel.predicates[translation]=v);console.log("that");console.log(a);for(original in c)console.log(a.move),translation=c[original],a[translation]=a[original];a.isLoaded=!0});for(;!a.isLoaded;)console.log("not loaded...");console.log(a);return a}Karel.instructions={move:1,turnLeft:1,putBeeper:1,pickBeeper:1,turnRight:2,turnAround:2,paintCorner:2};
Karel.predicates={frontIsClear:1,frontIsBlocked:1,leftIsClear:1,leftIsBlocked:1,rightIsClear:1,rightIsBlocked:1,beepersPresent:1,noBeepersPresent:1,beepersInBag:1,noBeepersInBag:1,facingNorth:1,notFacingNorth:1,facingEast:1,notFacingEast:1,facingSouth:1,notFacingSouth:1,facingWest:1,notFacingWest:1,cornerColorIs:2,random:2};
