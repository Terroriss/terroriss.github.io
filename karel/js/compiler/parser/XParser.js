function XParser(){Parser.call(this);this.scanner.addWordCharacters("_");this.defineOperators()}XParser.prototype=new Parser;XParser.prototype.constructor=XParser;
XParser.prototype.defineOperators=function(){this.definePrefixOperator("(",this.parenOperator,0,"RIGHT");this.definePrefixOperator("+",this.prefixOperator,100);this.definePrefixOperator("-",this.prefixOperator,100);this.definePrefixOperator("!",this.prefixOperator,100);this.definePrefixOperator("++",this.prefixOperator,100,"RIGHT");this.definePrefixOperator("--",this.prefixOperator,100,"RIGHT");this.defineInfixOperator("(",this.applyOperator,110,"RIGHT");this.defineInfixOperator("+",this.infixOperator,
80);this.defineInfixOperator("-",this.infixOperator,80);this.defineInfixOperator("++",this.suffixOperator,100,"RIGHT");this.defineInfixOperator("--",this.suffixOperator,100,"RIGHT");this.defineInfixOperator("*",this.infixOperator,90);this.defineInfixOperator("/",this.infixOperator,90);this.defineInfixOperator("%",this.infixOperator,90);this.defineInfixOperator("<",this.infixOperator,60);this.defineInfixOperator("<=",this.infixOperator,60);this.defineInfixOperator(">",this.infixOperator,60);this.defineInfixOperator(">=",
this.infixOperator,60);this.defineInfixOperator("==",this.infixOperator,50);this.defineInfixOperator("!=",this.infixOperator,50);this.defineInfixOperator("&&",this.infixOperator,30);this.defineInfixOperator("||",this.infixOperator,20);this.defineInfixOperator("?",this.questionMarkColon,15,"RIGHT");this.defineInfixOperator("=",this.infixOperator,10,"RIGHT");this.defineInfixOperator("+=",this.infixOperator,10,"RIGHT");this.defineInfixOperator("-=",this.infixOperator,10,"RIGHT");this.defineInfixOperator("*=",
this.infixOperator,10,"RIGHT");this.defineInfixOperator("/=",this.infixOperator,10,"RIGHT");this.defineInfixOperator("%=",this.infixOperator,10,"RIGHT")};XParser.prototype.prefixOperator=function(a,b){console.log("test");console.log(a);console.log(b);assert(!1);return["pre"+b,a.readE(a.prefixProperties[b].prec)]};XParser.prototype.infixOperator=function(a,b,c){b=b.text;return[b,c,a.readE(a.infixProperties[b].prec)]};
XParser.prototype.suffixOperator=function(a,b,c){console.log("test");console.log(a);console.log(b);assert(!1);return["post"+b,c]};XParser.prototype.parenOperator=function(a,b){console.log("test");console.log(a);console.log(b);assert(!1);b=a.readE(0);a.verifyToken(")");return b};
XParser.prototype.applyOperator=function(a,b,c){b=["call",c.text,c.lineNumber];c=a.nextToken();var d=c.text;if(")"==d)return b;for(a.saveToken(c);;){b.push(a.readE(0));c=a.nextToken();d=c.text;if(")"==d)break;if(","!=d)throw Error('Found "'+d+'" when expecting "," or ")"');}console.log("apply");console.log(b);return b};XParser.prototype.questionMarkColon=function(a,b,c){var d=a.readE(0);a.verifyToken(":");a=a.readE(a.infixProperties[b].prec);return["?:",c,d,a]};
