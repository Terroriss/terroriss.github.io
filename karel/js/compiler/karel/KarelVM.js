function KarelVM(a){XVM.call(this);this.karel=a;this.initKarelOperators();this.userFnNames=[];this.currLineNum=null}KarelVM.prototype=new XVM;KarelVM.prototype.constructor=KarelVM;KarelVM.prototype.initKarelOperators=function(){this.defineOperator(new KarelCall);this.defineOperator(new KarelWhile);this.defineOperator(new KarelRepeat);this.defineOperator(new KarelIf);this.defineOperator(new KarelBlock);this.defineOperator(new KarelStmt)};
KarelVM.prototype.resetTempCounter=function(){this.nextTemp=0};KarelVM.prototype.setUserFnNames=function(a){this.userFnNames=a};KarelVM.prototype.getCurrLineNum=function(){return this.currLineNum};KarelVM.prototype.startCheck=function(a){if(null==this.cf){var c=this.functions[a];if(!c)throw Error("No "+a+" function defined");this.call(a,c)}};KarelVM.prototype.atStatementBoundary=function(){return this.cf?null==this.getCurrLineNum()?!1:"stmt"==this.cf.code[this.cf.pc].name?!0:!1:!0};
function KarelCall(a,c){this.name="call";this.fn=a;this.lineNumber=c}KarelCall.prototype.toString=function(){return this.name+" "+this.fn};KarelCall.prototype.legalFn=function(a,c){return Karel.instructions[a]||Karel.predicates[a]||-1!=$.inArray(a,c)?!0:!1};KarelCall.prototype.compile=function(a,c,b){var d=c[1];c=c[2];if(!this.legalFn(d,a.userFnNames))throw Error('Undefined operator "'+d+'"');b.push(new KarelStmt);b.push(new KarelCall(d,c))};
KarelCall.prototype.execute=function(a){a.currLineNum=this.lineNumber;if(-1!=$.inArray(this.fn,a.userFnNames))a.call(this.fn,a.functions[this.fn]);else if(Karel.instructions[this.fn])a.karel[this.fn]();else Karel.predicates[this.fn]&&a.push(a.karel[this.fn]())};function KarelRepeat(){this.name="repeat";this.lineNumber=null}KarelRepeat.prototype.toString=function(){return this.name};
KarelRepeat.prototype.compile=function(a,c,b){b.push(new KarelStmt);var d=c[1],e=c[2];c=c[3][1];var f="$"+a.nextTemp++,g=new JumpIns("jumpf"),h=new JumpIns("jump");b.push(new PushIns(d));b.push(new StoreIns(f));h.setTarget(b.length);b.push(new PushIns(0));b.push(a.operators[">"]);b.push(new SetLineNumber(c));b.push(g);a.compile(e,b);b.push(new KarelStmt);b.push(new LoadIns(f));b.push(new PushIns(1));b.push(a.operators["-"]);b.push(new StoreIns(f));b.push(h);g.setTarget(b.length)};
function SetLineNumber(a){this.name="setLineNumber";this.lineNumber=a}SetLineNumber.prototype.execute=function(a){a.currLineNum=this.lineNumber};function KarelWhile(){this.name="while"}KarelWhile.prototype.toString=function(){return this.name};KarelWhile.prototype.compile=function(a,c,b){var d=new JumpIns("jumpf"),e=new JumpIns("jump");e.setTarget(b.length+1);a.compile(c[1],b);b.push(d);a.compile(c[2],b);b.push(new KarelStmt);b.push(e);d.setTarget(b.length)};function KarelIf(){this.name="if"}
KarelIf.prototype.toString=function(){return this.name};KarelIf.prototype.compile=function(a,c,b){var d=new JumpIns("jumpf"),e=new JumpIns("jump");a.compile(c[1],b);b.push(d);a.compile(c[2],b);3<c.length?(b.push(e),d.setTarget(b.length),a.compile(c[3],b),e.setTarget(b.length)):d.setTarget(b.length)};function KarelBlock(){this.name="block"}KarelBlock.prototype.toString=function(){return this.name};KarelBlock.prototype.compile=function(a,c,b){for(var d=1;d<c.length;d++)a.compile(c[d],b)};
function KarelStmt(){this.name="stmt"}KarelStmt.prototype.toString=function(){return this.name};KarelStmt.prototype.compile=function(a,c,b){c[1].push(c[2][1]);a.compile(c[1],b)};KarelStmt.prototype.execute=function(a,c,b){};
