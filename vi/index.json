[{"uri":"https://minhlong.site/vi/markdown/gioi-thieu/","title":"Giới thiệu","tags":[],"description":"","content":"Markdown là gì? Markdown là ngôn ngữ đánh dấu văn bản đơn giản, được sử dụng phổ biến như dùng để viết tập tin README, viết tin nhắn trên diễn đàn, viết bài trên blog (ví dụ như blog này).\nTại sao lại sử dụng Mardown?  Markdown có cú pháp đơn giản dễ nhớ, dễ học. Khi sử dụng cần gõ ít ký tự, tăng tốc độ đánh máy. Có thể chuyển đầu ra dưới định dạng chuẩn XHTML. Khả năng tạo ra lỗi thấp. Có thể viết bằng bất cứ trình soạn thảo văn bản nào mà bạn thích.  "},{"uri":"https://minhlong.site/vi/markdown/dinh-dang-van-ban/","title":"Định dạng văn bản","tags":[],"description":"","content":"1) Tiêu đề (Headings): Để tạo một tiêu đề, ta thêm dấu thăng (#) vào đầu dòng văn bản, ví dụ như sau:\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Tương đương với các dòng sau trong HTML:\n\u0026lt;h1\u0026gt;h1 Heading\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;h2 Heading\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 Heading\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 Heading\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 Heading\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 Heading\u0026lt;/h6\u0026gt; Kết quả hiển thị: h1 Heading\nh2 Heading\nh3 Heading\nh4 Heading\nh5 Heading\nh6 Heading\nNgoài ra, còn có thể sử dụng cú pháp sau để thể hiện tiêu đề h1 và h2:\nh1 Heading ========== h2 Heading ---------- Các lưu ý khi sử dụng tiêu đề:\n   ✓ Nên ✗ Không nên     # Tiêu đề đúng #Không được viết sát vào dấu thăng    Nên cách một dòng trước...\n# Tiêu đề\n...và sau tiêu đề   Nếu không cách thêm một dòng với\n# Tiêu đề\ntrong một số trường hợp sẽ hiển thị không như ý muốn     2) Đoạn văn bản (Paragraphs): Để tách đoạn văn bản, ta thêm một dòng trống ở giữa hai đoạn:\nĐoạn văn bản thứ nhất. Đoạn văn bản thứ hai. Tương đương\n\u0026lt;p\u0026gt;Đoạn văn bản thứ nhất.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Đoạn văn bản thứ hai.\u0026lt;/p\u0026gt; Kết quả hiển thị:\nĐoạn văn bản thứ nhất.\nĐoạn văn bản thứ hai.\nLưu ý, trừ khi bạn sử dụng đoạn văn trong danh sách, không nên thêm dấu cách vào trước đoạn văn bản vì nó sẽ không hiển thị được như mong muốn.\n3) Xuống dòng (Line breaks): Để xuống dòng, ấn từ 2 dấu cách trở lên ở cuối dòng thứ nhất, sau đó ấn Enter.\nLưu ý, phương pháp trên được hỗ trợ bởi đa số các ứng dụng nhưng khi sử dụng dấu cách ta không thể nhìn thấy dễ gây ra sai sót. Ở các ứng dụng có hỗ trợ HTML, bạn có thể dùng \u0026lt;br\u0026gt; để xuống dòng.\n4) Nhấn mạnh văn bản (Emphasis): In đậm (Bold) Để in đậm, thêm 2 dấu sao hoặc 2 dấu gạch dưới vào trước và sau cụm từ cần in đậm:\n   Markdown Kết quả      Câu có chứa cụm **in đậm**.  Câu có chứa cụm in đậm.    Câu có chứa cụm __in đậm__.  Câu có chứa cụm in đậm.    Cụm từ**chứa**in đậm.  Cụm từchứain đậm.    Tương đương với thẻ \u0026lt;strong\u0026gt;\u0026lt;/strong\u0026gt; trong HTML.\nLưu ý:\n   ✓ Nên ✗ Không nên      Dùng dấu sao khi viết cụm**chứa**in đậm  Không dùng dấu__gạch__vì sẽ không có tác dụng.    In nghiêng (Italic) Để in nghiêng, dùng 1 dấu sao hoặc 1 dấu gạch dưới trước và sau cụm từ in nghiêng:\n   Markdown Kết quả      Câu có chứa cụm *in nghiêng*.  Câu có chứa cụm in nghiêng.    Câu có chứa cụm _in nghiêng_.  Câu có chứa cụm in nghiêng.    Cụm từ*chứa*in nghiêng.  Cụm từchứain nghiêng.    Tương đương với thẻ \u0026lt;em\u0026gt;\u0026lt;/em\u0026gt; trong HTML.\nLưu ý:\n   ✓ Nên ✗ Không nên      Dùng dấu sao khi viết cụm*chứa*in nghiêng  Không dùng dấu_gạch_vì sẽ không có tác dụng.    Vừa in đậm, vừa in nghiêng (Bold and Italic) Để vừa in đậm, vừa in nghiêng dùng 3 dấu sao hoặc 3 dấu gạch dưới trước và sau cụm từ:\n   Markdown Kết quả      Câu có chứa cụm ***vừa in đậm, vừa in nghiêng***.  Câu có chứa cụm vừa in đậm, vừa in nghiêng.    Câu có chứa cụm ___vừa in đậm, vừa in nghiêng___.  Câu có chứa cụm vừa in đậm, vừa in nghiêng.    Câu có chứa cụm __*vừa in đậm, vừa in nghiêng*__.  Câu có chứa cụm vừa in đậm, vừa in nghiêng.    Câu có chứa cụm **_vừa in đậm, vừa in nghiêng_**.  Câu có chứa cụm vừa in đậm, vừa in nghiêng.    Cụm từ***chứa***từ vừa in đậm, vừa in nghiêng.  Cụm từchứatừ vừa in đậm, vừa in nghiêng.    Tương đương với thẻ \u0026lt;strong\u0026gt;\u0026lt;em\u0026gt;\u0026lt;/em\u0026gt;\u0026lt;/strong\u0026gt; trong HTML.\nLưu ý:\n   ✓ Nên ✗ Không nên      Dùng dấu sao khi viết cụm***chứa***từ vừa in đậm, vừa in nghiêng  Không dùng dấu___gạch___vì sẽ không có tác dụng.    Gạch ngang (Strikethrough) Để gạch ngang cụm từ, dùng 2 dấu ngã ngay trước và sau cụm từ:\n   Markdown Kết quả      ~~Cụm từ gạch ngang~~  Cụm từ gạch ngang    Tương đương với thẻ \u0026lt;del\u0026gt;\u0026lt;/del\u0026gt; trong HTML.\nLưu ý:\n   ✓ Nên ✗ Không nên      Đặt dấu ngã ~~ngay sát~~ trước và sau cụm từ.  Cách ra ~~ như vậy~~ hoặc ~~như vậy ~~ hoặc ~~ như vậy ~~ sẽ không có tác dụng.    5) Danh sách (Lists): Danh sách có thứ tự (Ordered Lists) Để tạo một danh sách có thứ tự, ở đầu mỗi dòng ta thêm một chữ số và dấu chấm, các chữ số này không cần phải sắp xếp theo thứ tự:\n   Markdown Kết quả      1. Phần tử thứ nhất\n2. Phần tử thứ hai\n3. Phần tử thứ ba\n4. Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử thứ tư     1. Phần tử thứ nhất\n1. Phần tử thứ hai\n1. Phần tử thứ ba\n1. Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử thứ tư     1. Phần tử thứ nhất\n8. Phần tử thứ hai\n3. Phần tử thứ ba\n5. Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử thứ tư     1. Phần tử thứ nhất\n2. Phần tử thứ hai\n3. Phần tử thứ ba\n\u0026emsp;\u0026emsp;\u0026ensp;1. Phần tử con thứ nhất\n\u0026emsp;\u0026emsp;\u0026ensp;2. Phần tử con thứ hai\n4. Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử con thứ nhấtPhần tử con thứ haiPhần tử thứ tư     Tương đương với thẻ \u0026lt;ol\u0026gt;\u0026lt;/ol\u0026gt; trong HTML.\nLưu ý, một số ứng dụng cho phép sử dụng dấu đóng ngoặc đơn ( ) ) để thể hiện danh sách có thứ tự, nhưng không nên sử dụng vì không phải tất cả các ứng dụng đều hỗ trợ.\n   ✓ Nên ✗ Không nên      1. Phần tử thứ nhất\n2. Phần tử thứ hai   1) Phần tử thứ nhất\n2) Phần tử thứ hai     Danh sách không có thứ tự (Unordered Lists) Để tạo một danh sách không có thứ tự, thêm dấu gạch (-), dấu sao (*) hoặc dấu cộng (+) vào đầu mỗi dòng thuộc danh sách. Thụt lề đầu dòng để tạo danh sách con:\n   Mardown Kết quả      - Phần tử thứ nhất\n- Phần tử thứ hai\n- Phần tử thứ ba\n- Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử thứ tư     * Phần tử thứ nhất\n* Phần tử thứ hai\n* Phần tử thứ ba\n* Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử thứ tư     + Phần tử thứ nhất\n+ Phần tử thứ hai\n+ Phần tử thứ ba\n+ Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử thứ tư     - Phần tử thứ nhất\n- Phần tử thứ hai\n- Phần tử thứ ba\n\u0026emsp;\u0026emsp;\u0026ensp;- Phần tử con thứ nhất\n\u0026emsp;\u0026emsp;\u0026ensp;- Phần tử con thứ hai\n- Phần tử thứ tư   Phần tử thứ nhấtPhần tử thứ haiPhần tử thứ baPhần tử con thứ nhấtPhần tử con thứ haiPhần tử thứ tư     Tương đương với thẻ \u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt; trong HTML.\nThêm phần tử khác vào danh sách Để thêm phần tử khác vào giữa danh sách, thêm 4 dấu cách hoặc dấu tab vào đầu phần tử. Như các trường hợp sau:\nThêm đoạn văn (Paragraphs) * Phần tử thứ nhất * Phần tử thứ hai Đoạn văn bên dưới phần tử thứ hai * Phần tử thứ ba Kết quả hiển thị:\n  Phần tử thứ nhất\n  Phần tử thứ hai\nĐoạn văn bên dưới phần tử thứ hai\n  Phần tử thứ ba\n  Thêm trích dẫn (Blockquotes) * Phần tử thứ nhất * Phần tử thứ hai \u0026gt; Trích dẫn bên dưới phần tử thứ hai  * Phần tử thứ ba Kết quả hiển thị\n  Phần tử thứ nhất\n  Phần tử thứ hai\n Trích dẫn bên dưới phần tử thứ hai\n   Phần tử thứ ba\n  Thêm đoạn code (Code Blocks) 1. Phần tử thứ nhất 2. Bên dưới phần tử thứ hai là đoạn code: \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 3. Phần tử thứ ba Kết quả hiển thị\n Phần tử thứ nhất Bên dưới phần tử thứ hai là đoạn code: \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Phần tử thứ ba  Thêm hình ảnh (Images) 1. Phần tử thứ nhất 2. Bên dưới phần tử thứ hai là ảnh ![I love Markdown](/images/markdown/i-love-markdown.jpg) 3. Phần tử thứ ba Kết quả hiển thị\n  Phần tử thứ nhất\n  Bên dưới phần tử thứ hai là ảnh\n  Phần tử thứ ba\n  Thêm danh sách (Lists) Bạn có thể thêm danh sách không có thứ tự (unordered) vào giữa danh sách có thứ tự (odered), và ngược lại.\n1. Phần tử thứ nhất 2. Phần tử thứ hai - Phần tử con thứ nhất - Phần tử con thứ hai 3. Phần tử thứ ba Kết quả hiển thị\n Phần tử thứ nhất Phần tử thứ hai  Phần tử con thứ nhất Phần tử con thứ hai   Phần tử thứ ba  "},{"uri":"https://minhlong.site/vi/markdown/cac-dinh-dang-khac/","title":"Các định dạng khác","tags":[],"description":"","content":"1) ID cho Tiêu Đề (Heading IDs):  Rất nhiều bộ xử lý Markdown hỗ trợ việc thêm id cho tiêu đề, việc này sẽ giúp bạn dễ dàng sử dụng CSS để định dạng cách hiển thị cho trang web. Để thêm id, ta đặt đoạn id đó vào cặp dấu ngoặc nhọn ({}) ngay cùng dòng với tiêu đề:\n### Tiêu đề {#id-tuy-chinh} Tương đương với đoạn HTML sau:\n\u0026lt;h3 id=\u0026#34;id-tuy-chinh\u0026#34;\u0026gt;Tiêu đề\u0026lt;/h3\u0026gt; 2) Bảng (Tables): Để tạo bảng, dùng ít nhất 3 dấu gạch (-) để tạo phần tiêu đề cho mỗi cột, và dùng dấu gạch đứng (|) để chia cột:\n| Tiêu đề 1 | Tiêu đề 2 | |-----------|-----------| | Nội dung | Nội dung | | Nội dung | Nội dung | Kết quả hiển thị\n   Tiêu đề 1 Tiêu đề 2     Nội dung Nội dung   Nội dung Nội dung    Độ rộng của các ô có thể khác nhau, ví dụ bên dưới sẽ cho kết quả giống như ở trên:\n| Tiêu đề 1 | Tiêu đề 2 | |---|-----------| | Nội dung | Nội dung | | Nội dung | Nội dung | Căn lề (Alignment) Bạn có thể căn lề văn bản trong cột sang trái, phải, căn giữa bằng cách thêm dấu hai chấm (:) tương ứng vào trái, phải hoặc cả hai bên của dãy dấu gạch phân cách nội dung và tiêu đề bảng. Mặc định văn bản trong cột sẽ căn lề trái.\n| Căn trái | Căn giữa | Căn phải | | :------ | :------: | -------: | | Nội dung | Nội dung | Nội dung | | Nội dung | Nội dung | Nội dung | Kết quả hiển thị\n   Căn trái Căn giữa Căn phải     Nội dung Nội dung Nội dung   Nội dung Nội dung Nội dung    Lưu ý, để hiển thị dấu gạch đứng (|) trong bảng, bạn có thể dùng mã HTML \u0026amp;#124;.\n3) Liên kết (Links): Để tạo một liên kết, đặt văn bản hiển thị trong cặp ngoặc vuông và ngay sau đó là địa chỉ liên kết trong cặp ngoặc tròn:\nĐây là [trang web của mình](https://minhlong.site). Kết quả hiển thị\nĐây là trang web của mình.\nThêm chú giải cho liên kết (Tooltips) Để thêm chú giải (đoạn văn bản xuất hiện khi ta di chuột vào liên kết), cho đoạn văn bản chú giải vào sau địa chỉ liên kết:\nĐây là [trang web của mình](https://minhlong.site \u0026#34;Minh Long\u0026#34;). Kết quả hiển thị Đây là trang web của mình.\nLiên kết trong cùng một trang Bạn có thể dùng dấu thăng (#) để liên kết đến ID của tiêu đề trong cùng một trang:\nLiên kết đến [id tiêu đề](#heading-ids) Kết quả hiển thị\nLiên kết đến id tiêu đề\nVà để liên kết đến tiêu đề ở trang khác, bạn chỉ cần thêm địa chỉ url của trang trước id tiêu đề. Ví dụ\n[Giới thiệu Markdown](/markdown/gioi-thieu#markdown-là-gì) Giới thiệu Markdown\nLưu ý, bạn cũng có thể sử dụng cú pháp sau để hiển thị nhanh địa chỉ url hoặc địa chỉ e-mail:\n\u0026lt;https://minhlong.site\u0026gt; \u0026lt;contact@minhlong.site\u0026gt; Kết quả hiển thị\nhttps://minhlong.site\ncontact@minhlong.site\nLưu ý, để nhấn mạnh liên kết, ta có thể đặt đoạn liên kết vào cặp dấu sao (*) như phần nhấn mạnh văn bản ở phần trước. Bạn cũng có thể biểu diễn văn bản liên kết dưới dạng code:\nĐây là đoạn **[liên kết in đậm](https://minhlong.site \u0026#34;Minh Long\u0026#34;).** Đây là đoạn *[liên kết in nghiêng](https://minhlong.site \u0026#34;Minh Long\u0026#34;).* Bạn cũng có thể dùng định dạng [`code`](#3-đoạn-mã-lập-trình-code) để biểu diễn văn bản liên kết. Kết quả hiển thị\nĐây là đoạn liên kết in đậm.\nĐây là đoạn liên kết in nghiêng.\nBạn cũng có thể dùng định dạng code để biểu diễn văn bản liên kết.\nLưu ý, Mardown không cho phép có dấu cách trong liên kết, thay mọi dấu cách trong liên kết bằng %20.\n   ✓ Nên ✗ Không nên      [link](https://www.example.com/co%20dau%20cach)   [link](https://www.example.com/co dau cach)     4) Mã lập trình (Code): Để hiển thị mã lập trình, ta dùng dấu backtick (`):\n`\u0026lt;div\u0026gt;` là một thẻ trong HTML. Kết quả hiển thị\n\u0026lt;div\u0026gt; là một thẻ trong HTML.\nNếu muốn dùng dấu backtick trong dòng code, dùng cặp 2 dấu backtick:\n``Sử dụng `backtick` trong đoạn code``. Kết quả hiển thị\nSử dụng `backtick` trong đoạn code.\nĐoạn mã lập trình (Code Blocks) Để tạo đoạn mã lập trình, sử dụng 4 dấu cách hoặc dấu tab đầu mỗi dòng:\n\u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Lập trình\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Kết quả hiển thị\n\u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Lập trình\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Lưu ý, việc thêm dấu cách hoặc dấu tab trước mỗi dòng khá bất tiện, thay vào đó bạn có thể cú pháp khác. Tùy vào ứng dụng hoặc bộ xử lý Markdown bạn đang dùng, thêm 3 dấu backtick (`) hoặc 3 dấu ngã (~) vào trước và sau đoạn code cần hiển thị:\n~~~ { \u0026quot;firstName\u0026quot;: \u0026quot;John\u0026quot;, \u0026quot;lastName\u0026quot;: \u0026quot;Smith\u0026quot;, \u0026quot;age\u0026quot;: 25 } ~~~ Kết quả hiển thị\n{ \u0026#34;firstName\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Smith\u0026#34;, \u0026#34;age\u0026#34;: 25 } Làm nổi bật cứ pháp (Syntax highlighting) Để làm cho đoạn code trở nên đẹp hơn, bạn có thể thêm syntax highlight bằng cách thêm tên ngôn ngữ vào sau 3 dấu mở đầu đoạn code:\n~~~json { \u0026quot;firstName\u0026quot;: \u0026quot;John\u0026quot;, \u0026quot;lastName\u0026quot;: \u0026quot;Smith\u0026quot;, \u0026quot;age\u0026quot;: 25 } ~~~ { \u0026#34;firstName\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Smith\u0026#34;, \u0026#34;age\u0026#34;: 25 } 5) Hình ảnh (Images): Để hiện thị ảnh, sử dụng cấu trúc giống như hiển thị liên kết và thêm dấu chấm than (!) ở trước:\n![I love Markdown](/images/markdown/i-love-markdown.jpg \u0026#34;Markdown\u0026#34;) Kết quả hiển thị\nLưu ý, bạn cũng có thể sử dụng ảnh như là một liên kết, để sử dụng đặt đoạn Markdown của ảnh vào cặp dấu ngoặc vuông, sau đó là địa chỉ liên kết trong cặp ngoặc đơn:\n[![I love Markdown](/images/markdown/i-love-markdown.jpg \u0026#34;Markdown\u0026#34;)](/markdown) Kết quả hiển thị\n\n"},{"uri":"https://minhlong.site/vi/markdown/","title":"Sử dụng Markdown cơ bản","tags":["markdown","syntax"],"description":"","content":"Sử dụng Markdown cơ bản "},{"uri":"https://minhlong.site/vi/python/","title":"Sử dụng Python cơ bản","tags":["python","syntax"],"description":"","content":"Sử dụng Python cơ bản "},{"uri":"https://minhlong.site/vi/markdown/tham-khao/","title":"Tài liệu tham khảo","tags":[],"description":"","content":"https://www.markdownguide.org\n"},{"uri":"https://minhlong.site/vi/demo/game/breakout/","title":"Demo Game | Breakout","tags":[],"description":"","content":"  .main-content { display: flex; justify-content: center; align-items: center; flex-direction: column; height: 100%; color: var(--color-heading); } .newgame-btn { margin-top: 15px; width: 100%; width: 300px; height: 30px; background: var(--color-heading); color: var(--background); }     const main_container = document.querySelector(\".main-content\"); var _notmobile = false, playing = false, score = 0, lost = false;   "},{"uri":"https://minhlong.site/vi/tags/markdown/","title":"markdown","tags":[],"description":"","content":""},{"uri":"https://minhlong.site/vi/tags/python/","title":"python","tags":[],"description":"","content":""},{"uri":"https://minhlong.site/vi/tags/syntax/","title":"syntax","tags":[],"description":"","content":""},{"uri":"https://minhlong.site/vi/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://minhlong.site/vi/contact/","title":"","tags":[],"description":"","content":"About me\n"},{"uri":"https://minhlong.site/vi/","title":"","tags":[],"description":"","content":" Phương Pháp Luận Lập Trình 0 bài viết\n    Python Cơ Bản 0 bài viết\n   Python Syntax\n Markdown Cơ Bản 4 bài viết\n      Markdown Syntax\n "},{"uri":"https://minhlong.site/vi/demo/","title":"Code Editor | Minh Long","tags":[],"description":"","content":" Demo Artificial Intelligence ✕ Minesweeper Solver Using Knowledge-based        Game ✕ Breakout        Website ✕ Auction Page      ✕ Simple Code Editor         $(document).on('click', '.close-des', function () { $(this).parents('.block-des').fadeOut(); }); $( document ).ready(function() { masonryGrid(); }); $( document ).on('resize', function() { masonryGrid(); }); function masonryGrid() { var all_grid = document.querySelectorAll('.block-grid'); all_grid.forEach(grid = { var rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap')), rowHeight = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-auto-rows')), items = grid.querySelectorAll('.block-card'); items.forEach(item = { let rowSpan = Math.ceil((item.getBoundingClientRect().height+rowGap)/(rowHeight+rowGap)); item.style.gridRowStart = 'span ' + rowSpan; }); }); }  "},{"uri":"https://minhlong.site/vi/demo/editor/","title":"Demo | Minh Long","tags":[],"description":"","content":"  .darkmode-container { position: fixed; top: 6px; right: 20px; left: auto; bottom: auto; } .dark-toggle { transform: scale(.7); } .dark-toggle:checked { transform: scale(.525); }          HTML CSS JavaScript Result  HTML     CSS     JavaScript        Console Projects    ˅      ✕       var eventMethod = window.addEventListener ? \"addEventListener\" : \"attachEvent\"; var eventer = window[eventMethod]; var messageEvent = eventMethod === \"attachEvent\" ? \"onmessage\" : \"message\"; const myConsole = document.querySelector(\".editor-console\"); const openProjectModal = document.querySelector(\".open-project-modal\"); eventer(messageEvent, function (e) { // if (e.origin !== 'http://the-trusted-iframe-origin.com') return; const raw = e.data || e.message, data = JSON.parse(raw), newMsg = document.createElement(\"div\"); if (data[\"type\"]===\"error\") { const msgError = document.createElement(\"div\"); const error = JSON.parse(data[\"msg\"]); msgError.innerHTML = `${error.message}${error.line}:${error.column}details: ${JSON.stringify(error.error_obj)}`; newMsg.appendChild(msgError); newMsg.classList.add(\"console-msg-error\"); } else newMsg.innerHTML = `${data[\"msg\"]}`; newMsg.classList.add(\"console-msg\"); myConsole.appendChild(newMsg); myConsole.scrollTop = myConsole.scrollHeight; const console_msg = document.querySelector(\".console-message\"); console_msg.innerText = \"\"; }); const consoleBtn = document.getElementById(\"open-console\"); const openModalBtn = document.getElementById(\"open-project\"); function openModal() { openProjectModal.classList.remove(\"hidden\"); openModalBtn.classList.add(\"active\"); }; function closeModal() { openProjectModal.classList.add(\"hidden\"); openModalBtn.classList.remove(\"active\"); }; function toggleConsole() { const is_hidden = myConsole.classList.contains(\"hidden\"); if (is_hidden) showConsole(); else hideConsole(); }; function showConsole() { myConsole.classList.remove(\"hidden\"); consoleBtn.classList.add(\"active\"); }; function hideConsole() { myConsole.classList.add(\"hidden\"); consoleBtn.classList.remove(\"active\"); }; function clearConsole() { myConsole.innerHTML = 'Console was cleared.˅'; console.clear(); }; const container = document.querySelector(\".editor-container\").classList; const console_bar = document.querySelector(\".editor-console-bar\").classList; function setReverse(bool) { if (bool) { container.add(\"reverse\"); console_bar.remove(\"reverse\"); localStorage.setItem(\"block\", \"reverse\"); } else { container.remove(\"reverse\"); console_bar.add(\"reverse\"); localStorage.setItem(\"block\", \"normal\"); } }; const _reverse = localStorage.getItem(\"block\")===\"normal\" ? false : true; if (_reverse) setReverse(true); else setReverse(false); dragHoriziontal(); function changeBlock() { if (container.contains(\"reverse\")) setReverse(false); else setReverse(true); dragHoriziontal(); };   "},{"uri":"https://minhlong.site/vi/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://minhlong.site/vi/demo/ai/knowledge/minesweeper/","title":"Demo AI | Minesweeper","tags":[],"description":"","content":"      ⌂  Rows:  Cols:  Mines:            var r = document.querySelector(':root'); var gameplay = document.querySelector(\".game-play\") var board = document.querySelector(\".board\") var gameconsole = document.querySelector(\".game-console\") var gamestatus = document.querySelector(\".game-status\") var cell_size var cell_columns = check_number(document.getElementById(\"new_cols\").value, 3, 50) var cell_rows = check_number(document.getElementById(\"new_rows\").value, 3, 50) var mines = check_number(document.getElementById(\"new_mines\").value, 1, 2000) if (mines  cell_rows * cell_columns) mines = Math.floor(4 * (cell_rows * cell_columns) / 5); var game = new Minesweeper(cell_rows, cell_columns, mines) var ai = new MinesweeperAI(cell_rows, cell_columns) var i, j var endGame = false var move = null var revealed = new ArraySet() var flags = new ArraySet() var na = document.createElement(\"span\") var button_group = '' var btn_group_1 = document.getElementById(\"button-group-1\") var btn_group_2 = document.getElementById(\"button-group-2\") if (window.innerWidth ...' set_game_board() create_game() window.addEventListener(\"resize\", function() { if (window.innerWidth '; for (j = 0; j `; } content += \"\"; } board.innerHTML = content; board.addEventListener(\"click\", function(e) { e.preventDefault(); const target = e.target; if (!endGame) { if (target.classList.contains(\"cell\")) { let x = parseInt(target.getAttribute(\"data-x\"), 10) let y = parseInt(target.getAttribute(\"data-y\"), 10) if (!revealed.has([x, y])) { if (game.is_mine([x, y])) { revealed.add([x, y]) endGame = true ai_stop() gamestatus.innerHTML = \"Lost\n\" target.classList.add(\"red-mine\") show_all_mines() } else { nearby = game.nearby_mines([x, y]) revealed.add([x, y]) ai.add_knowledge([x, y], nearby) let p = document.createElement(\"span\") if (nearby != 0) { p.innerHTML = nearby p.classList.add(\"count-\"+nearby) } target.classList.add(\"revealed\") target.appendChild(p) } } } } }) board.addEventListener(\"contextmenu\", function(e) { e.preventDefault(); const target = e.target; if (!endGame) { if (target.classList.contains(\"cell\")) { let x = parseInt(target.getAttribute(\"data-x\"), 10) let y = parseInt(target.getAttribute(\"data-y\"), 10) if (!revealed.has([x, y])) { let c = document.querySelector(`.cell[data-x=\"${x}\"][data-y=\"${y}\"]`) if (flags.has([x, y])) { flags.delete([x, y]) while (c.hasChildNodes()) c.firstChild.remove() c.classList.remove(\"flag\") } else { flags.add([x, y]) c.innerHTML = \"\" c.classList.add(\"flag\") game.mines_found = flags if (game.won()) { endGame = true; ai_stop() gamestatus.innerHTML = \"Won\n\" } } } else if (flags.has([x, y])) { flags.delete([x, y]) while (c.hasChildNodes()) c.firstChild.remove() c.classList.remove(\"flag\") } } } }); } function check_number(n, mn, mx) { let tmp = parseInt(n, 10) return tmp mx ? mx : tmp } function show_all_mines() { if (endGame) for (i = 0; i \" } } } } window.addEventListener(\"DOMContentLoaded\", () = { document.getElementById(\"new_game_button\").addEventListener(\"click\", function() { ai_stop() cell_columns = check_number(document.getElementById(\"new_cols\").value, 3, 50) cell_rows = check_number(document.getElementById(\"new_rows\").value, 3, 50) mines = check_number(document.getElementById(\"new_mines\").value, 1, 2000) if (mines  cell_rows * cell_columns) mines = Math.floor(4 * (cell_rows * cell_columns) / 5); game = new Minesweeper(cell_rows, cell_columns, mines) ai = new MinesweeperAI(cell_rows, cell_columns) endGame = false move = null revealed = new ArraySet() flags = new ArraySet() na = document.createElement(\"span\") gamestatus.innerHTML = 'Playing...' na.innerHTML = \"New game: \" + cell_columns + \" x \" + cell_rows + \": \" + mines + \" mines\" gameconsole.innerHTML = \"\" gameconsole.appendChild(na) set_game_board() create_game() }) }) function ai_play() { if(!endGame) setInterval(aiMove, 100) } function ai_stop() { const interval_id = window.setInterval(function(){}, Number.MAX_SAFE_INTEGER); for (let i = 1; i \" for (let t = 0; t \"; let row = \"\"; for (let m = 0; m X\"; else row += \"\u0026nbsp\u0026nbsp\"; } content += row + \"\"; } content += \"\" let c = document.createElement(\"span\") c.innerHTML = content; gameconsole.appendChild(c) } function aiMove() { if(!endGame) { var message = document.createElement(\"span\") var move = ai.make_safe_move() if (move == null) { move = ai.make_random_move() if (move) message.innerHTML = \"No known safe moves, AI making random move.\" else message.innerHTML = \"No moves left to make.\" } else { message.innerHTML = \"AI making safe move.\" } gameconsole.appendChild(message) updateConsole() var mines_found = ai.mines var ai_flags = minusSet(mines_found, flags) if (move) { let evt = document.createEvent('MouseEvents'); evt.initMouseEvent('click', true, true, document.defaultView, 1, 0, 0, 0, 0, false, false, false, false, 0, null); document.querySelector(`.cell[data-x=\"${move[0]}\"][data-y=\"${move[1]}\"]`).dispatchEvent(evt); } const s_i = ai_flags[Symbol.iterator]() for (let c = 0; c "}]